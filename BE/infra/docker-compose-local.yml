version: "3.8"

services:
  database:
    image: mysql:8.0
    container_name: database
    restart: unless-stopped
    mem_limit: "1g"
    cpus: "1.5"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: honeymorning
      MYSQL_USER: honeymorning
      MYSQL_PASSWORD: honeymorning
      TZ: Asia/Seoul
    ports:
      - "3306:3306"

  redis:
    image: redis:6.2
    container_name: redis
    restart: unless-stopped
    mem_limit: "1g"
    cpus: "1.5"
    environment:
      TZ: Asia/Seoul
    ports:
      - "6379:6379"
    command: [
      "redis-server",
      "--requirepass", "$REDIS_PASSWORD",
      "--appendonly", "yes",
      "--appendfilename", "appendonly.aof",
      "--appendfsync", "everysec",
      "--save", "900 1",
      "--save", "300 10",
      "--save", "60 10000",
      "--maxmemory", "512mb",
      "--maxmemory-policy", "allkeys-lru",
      "--tcp-keepalive", "300",
      "--loglevel", "notice"
    ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"    
        max-file: "3"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_ui
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
      REDIS_PASSWORD: redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    mem_limit: "1g"
    cpus: "1.5"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_PROMETHEUS_EXPORTER: true

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-northeast-1
      - DATA_DIR=/var/lib/localstack/data
    volumes:
      - ./localstack-data:/var/lib/localstack
      - ./configuration/local/bootstrap.sh:/etc/localstack/init/ready.d/bootstrap.sh

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configuration/local/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  redis_data: