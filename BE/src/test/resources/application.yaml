spring:
  application:
    name: honeymorning
  data:
    redis:
      connect-timeout: 30s
      timeout: 10s
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: create-drop
      type:
        descriptor:
          sql:
            BasicBinder: TRACE
    generate-ddl: true
  jwt:
    secret: ${TEST_JWT_SECRET:W2SwTG0AFmzMTa/30eyIfTLKgZDD7HSv2pIAGL43JCn1ITnOpSzCuGjRZ3IyybHY0BDmDHLAn9Veko7PHmLdWg==}

  sql:
    init:
      mode: always

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin
    publisher-confirm-type: correlated
    publisher-returns: true

aws:
  s3:
    client:
      access-key: ENC(CG2kGpzauXUGc5AMUfvIig==)
      secret-access-key: ENC(wL4ZBDG69Z9RL91aKTB1tQ==)
      region: ENC(CurWBvXC9t9keeApu2cA8ijLkS2X5AKN)
      endpoint: ENC(uksqy4TCBYybyBCR5WRV0ot/QLh2PzCRis98O0w7R7M=)
    bucket-name:
      tts: ENC(H+mJWwChPkcvjeQZ3dcNoO1yKYrHSy6H)
    domain-name: ${mock.server.base-url}

voice:
  client:
    base-url: ${mock.server.base-url}
    resources:
      path:
        voice-id: ENC(oHL4IVSptV/dsyyaECzXqmx3baTxkpoPMjHebyvc7Mo=)
      header:
        optimize-streaming-Latency: ENC(xLq4jskZeNScCloU837EDw==)
        output_format: ENC(uINyBGA1XRBMmMkN3xFB+IuQlB2rRMuI)
        xi-api-key: ENC(fq1nxPppj0fKrnCxz4wdgzxTo+jaIIf9q86P1f3HOKKQQyNvwey4+L4swVM1xJPb5iX4zyepGNQWW50m2QBE1g==)
      body:
        model-id: ENC(PVI3+2C/nWQQBn57xf04LUN2FyAUxfj1xF7wxqnS3S4=)
        stability: ENC(2Hzak7m4jLw/Ph5NWJUMxg==)
        similarity-boost: ENC(pvPpTDNrUfWqRdPLTeupyw==)
        style: ENC(jOPHWrXge1pLxMbfVMaS0Q==)


jasypt:
  password: ${JASYPT_PASSWORD:honeymorning}

cors:
  allowedOrigins:
    frontend: http://localhost:5173

ai:
  client:
    brief: ${mock.server.base-url}
    quiz: ${mock.server.base-url}
    song: ${mock.server.base-url}
    topic-model: ${mock.server.base-url}

mock:
  server:
    base-url: http://localhost:8089

file:
  directory:
    path:
      content: ENC(2HQTjTbC8xySkIgz6ktS4Y5VzA+5D3cKxew9VXunOGnHCMk8LlTX4zVS4YPu1fbqAZTxdFxKVWA=)
      summary: ENC(Cj301Z07a9MFTvutszAHTDpTgPDHSJC2FFKmTQu1a5nFEf0BlmdvbGltFp9AYa58yzW7CPYGSkg=)
      quiz: ENC(zW3TcGnHTLX5Na1Q3LeYkp9doE1F3u5L1bYSvUtrSKq4IJ/Q2OkM3+R/f0Epggu6xFtRksKPShs=)
      music: ENC(v8uwAbdOo/41AGKIKDSi5a+Po/vYAzWFHpkoQZhfD82FFaqcqGotm77x51dnvEGedxAxdkmFRPI=)

jwt:
  issuer: honeymorning
  access-token:
    header: access-token
    expiry-seconds: ${ACCESS_EXPIRY_SECOND:30000}
  refresh-token:
    header: refresh-token
    expiry-seconds: ${REFRESH_EXPIRY_SECOND:60000}
  secret-key: ${SECRET_KEY:honey-morning-jwt}

security:
  url-pattern:
    ignoring:
      GET:
        - /v3/api-docs/**
        - /swagger-ui/**
        - /swagger-ui.html/**
        - /health
        - /actuator/**
      POST:
        - /api/accounts/**
      PATCH:
        - /health/**
      PUT:
        - /health/**
      DELETE:
        - /health/**
    permit-all:
      GET: [ ]
      POST: [ ]
      PATCH: [ ]
      PUT: [ ]
      DELETE: [ ]
      OPTIONS: /**

web:
  cors:
    allowed-origins:
      - http://localhost:3000
      - https://www.honeymorning.com
    allowed-methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
    allowed-headers:
      - SET-COOKIE
    exposed-headers:
      - SET-COOKIE
    allow-credentials: true

cookie:
  secure: false
  same-site: lax

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  endpoint:
    prometheus:
      enabled: true
  metrics:
    enable:
      all: true

logging:
  level:
    root: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.amqp: DEBUG
    org.springframework.amqp.rabbit: DEBUG
    com.rabbitmq.client: DEBUG